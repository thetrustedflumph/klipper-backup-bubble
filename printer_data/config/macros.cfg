######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# PRINT_START and PRINT_END. See docs/Slicers.md for more information on using these macros.

[gcode_macro BACKUP_CONFIG_TO_GITHUB]
gcode:
    RUN_SHELL_COMMAND CMD=BACKUP_CONFIG_TO_GITHUB_SHELL

[gcode_shell_command BACKUP_CONFIG_TO_GITHUB_SHELL]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True


[gcode_macro REMOVE_FILAMENT]
gcode:
    # Use relative coordinates
    G91
    # Zero the extrude length
    G92 E0
    # Extrude 15mm of Filament
    G1 E15 F500   
    # Retract 100mm of Filament
    G1 E-100 F1000
    RESPOND MSG='Done unloading filament'

[gcode_macro LOAD_FILAMENT]
gcode:
    # Use relative coordinates
    G91
    # Zero the extrude length
    G92 E0
    # Extrude 100mm of Filament
    G1 E100 F500  
    # Retract 01mm of Filament
    G1 E-2 F1000
    RESPOND MSG='Done loading filament'
    
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    {% set OFFSET_Z = params.OFFSET_Z|default(0.200)|float %}
    # Use absolute coordinates
    G90
    # Start bed heating
    M140 S{BED_TEMP}
    # Home all axes
    G28
    G28
    # Load Skew Profile
    SKEW_PROFILE LOAD=calilantern_skew_profile
    # Load Bed Mesh Profile
    BED_MESH_PROFILE LOAD=BED_MESH_FOR_SKEW_PROFILE
    # Move down 1mm and apply Z offset
    G91
    G0 Z-5 F1200
    SET_GCODE_OFFSET Z={OFFSET_Z}
    # Park effector near front of the print area
    G90
    G1 X0 Y-158 Z5 F3000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Move into position for purging and zero the extrude length
    G1 X-37.00 Y-165 Z5 F2000   
    G92 E0
    # Set and wait for nozzle to reach temperature
    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}
    # Draw a purge line
    G1 X-35.00 Y-165 Z0.3 F1200  
    G1 X35.00 Y-165 Z0.3 E50 F800
    # Move up and zero the extruder length after purge
    G1 Z5 F1200
    G92 E0
    # Printing...
    M117 Printing...

[gcode_macro PRINT_END]
gcode:
    # Retract 1mm
    G91
    {% set E = params.Y|default(-1)|float %}
    G1 E{E} F2100
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    # Use absolute coordinates
    G90
    # Clear Z offset, skew, and bed mesh
    SET_SKEW CLEAR=1
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    # Home all axes
    G28
    RESPOND MSG='Printing complete'


######################################################################
# Pressure Advance
######################################################################
[gcode_macro M900]
gcode:
  {% set K = params.K|default(0)|float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    # Set pause position
    {% set X = params.X|default(0)|float %}
    {% set Y = params.Y|default(-160)|float %}
    {% set Z = params.Z|default(325)|float %}
    {% set E = params.E|default(-1)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E{E} F2700
    G90
    G1 X{X} Y{Y} Z{Z} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro MOVE_TO_FRONT]
gcode:
    G90
    G1 X0 Y-160 Z325 F3000

######################################################################
# Override M117 command with rawparams
######################################################################

# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

# SDCard 'looping' (aka Marlin M808 commands) support
#
# Support SDCard looping
[sdcard_loop]

# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Move to pause position
    {% set X = params.X|default(0)|float %}
    {% set Y = params.Y|default(-160)|float %}
    {% set Z = params.Z|default(325)|float %}
    # Retract 1mm
    {% set E = params.E|default(-1)|float %}
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E{E} F2100
    G90
    G1 X{X} Y{Y} Z{Z} F6000
    RESPOND MSG='Printing paused'
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    # Retract 1mm
    {% set E = params.Y|default(-1)|float %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    RESPOND MSG='Printing resumed'
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    BASE_CANCEL_PRINT
    # Clear Z offset, skew, and bed mesh
    SET_SKEW CLEAR=1
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    RESPOND MSG='Printing canceled'